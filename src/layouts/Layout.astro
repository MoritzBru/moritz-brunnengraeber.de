---
import '@/style/base.css';

import Navbar from '@/components/TheNavbar.astro';
import Footer from '@/components/TheFooter.astro';

interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html
  lang="en"
  x-data="theme"
  x-bind:data-theme="theme"
>
  <head>
    <meta charset="UTF-8" />
    <meta
      name="viewport"
      content="width=device-width"
    />
    <meta
      name="generator"
      content={Astro.generator}
    />
    <title>{title} ⸱ Moritz Brunnengräber</title>

    <link
      rel="apple-touch-icon"
      sizes="180x180"
      href={new URL('/favicon/apple-touch-icon.png?v=3.0.0', Astro.url)}
    />
    <link
      rel="icon"
      type="image/png"
      sizes="32x32"
      href={new URL('/favicon/favicon-32x32.png?v=3.0.0', Astro.url)}
    />
    <link
      rel="icon"
      type="image/png"
      sizes="16x16"
      href={new URL('/favicon/favicon-16x16.png?v=3.0.0', Astro.url)}
    />
    <link
      rel="manifest"
      href={new URL('/favicon/site.webmanifest?v=3.0.0', Astro.url)}
    />
    <link
      rel="mask-icon"
      href={new URL('/favicon/safari-pinned-tab.svg?v=3.0.0', Astro.url)}
      color="#3f51b5"
    />
    <link
      rel="shortcut icon"
      href={new URL('/favicon/favicon.ico?v=3.0.0', Astro.url)}
    />
    <meta
      name="msapplication-TileColor"
      content="#3f51b5"
    />
    <meta
      name="msapplication-config"
      content={new URL('/favicon/browserconfig.xml?v=3.0.0', Astro.url)}
    />
    <meta
      name="theme-color"
      content="#3f51b5"
    />

    <!-- <meta
      property="og:image"
      content={new URL('/og/og-image.jpg', Astro.url)}
    />
    <meta
      property="og:image:width"
      content="320"
    />
    <meta
      property="og:image:height"
      content="320"
    /> -->
    <meta
      property="og:title"
      content={title}
    />
    <meta
      property="og:url"
      content={Astro.site}
    />
    <meta
      property="og:type"
      content="website"
    />

    <script>
      document.addEventListener('alpine:init', () => {
        const storageKey = 'theme';
        const preferredTheme = window.matchMedia('(prefers-color-scheme: dark)').matches
          ? 'dark'
          : 'light';
        Alpine.data('theme', () => ({
          init() {
            if (!localStorage.getItem(storageKey)) {
              localStorage.setItem(storageKey, preferredTheme);
            }
          },
          theme: localStorage.getItem(storageKey) ?? preferredTheme,
          toggleTheme() {
            this.theme = this.theme === 'light' ? 'dark' : 'light';
            localStorage.setItem(storageKey, this.theme);
          },
          transitionTheme() {
            if (!document.startViewTransition) {
              this.toggleTheme();
            } else {
              document.startViewTransition(this.toggleTheme.bind(this));
            }
          },
        }));
      });
    </script>

    <style>
      [data-theme]::view-transition-old(root),
      [data-theme]::view-transition-new(root) {
        animation: none;
        mix-blend-mode: normal;
      }
      [data-theme="light"]::view-transition-new(root) {
        animation: 0.3s ease expand;
      }
      [data-theme="dark"]::view-transition-old(root) {
        z-index: 2;
        animation: 0.3s ease contract;
      }

      @keyframes expand {
        from {
          clip-path: circle(0% at right top);
        }
        to {
          /* approximation of pythagoras: Hypotenuse = 7/8 * base + 0.5 * height */
          clip-path: circle(calc(88vmax + 50vmin) at right top);
        }
      }

      @keyframes contract {
        from {
          /* approximation of pythagoras: Hypotenuse = 7/8 * base + 0.5 * height */
          clip-path: circle(calc(88vmax + 50vmin) at right top);
        }
        to {
          clip-path: circle(0% at right top);
        }
      }
    </style>
  </head>
  <body>
    <Navbar />
    <slot />
    <Footer />
  </body>
</html>
