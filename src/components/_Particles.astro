---
import type { HTMLAttributes } from 'astro/types';
import { svgPath } from 'blobs/v2';

type Props = HTMLAttributes<'svg'>;

const { class: className, ...attrs } = Astro.props;

function getRandomArbitrary(min: number, max: number) {
  return Math.random() * (max - min) + min;
}

function getRandomInt(min: number, max: number) {
  min = Math.ceil(min);
  max = Math.floor(max);
  return Math.floor(Math.random() * (max - min) + min);
}

function generatePoint() {
  return {
    cx: getRandomInt(-10, 110),
    cy: getRandomInt(-10, 110),
    r: 0.2,
    duration: getRandomArbitrary(15, 45),
    begin: getRandomArbitrary(-15, 0),
    motionPath: svgPath({
      seed: Math.random(),
      extraPoints: getRandomInt(6, 12),
      randomness: getRandomInt(6, 12),
      size: getRandomInt(16, 24),
    }),
  };
}

const points = [...new Array(150)].map(() => generatePoint());
---

<svg
  xmlns="http://www.w3.org/2000/svg"
  viewBox="0 0 100 100"
  class:list={[className]}
  {...attrs}
>
  {
    points.map((p) => (
      <g>
        <path
          d={p.motionPath}
          transform={`translate(${p.cx} ${p.cy})`}
          fill="none"
          stroke="none"
          stroke-width={p.r}
          opacity="0.1"
        />
        <circle
          r={p.r}
          fill="currentColor"
          transform={`translate(${p.cx} ${p.cy})`}
        >
          <animateMotion
            dur={p.duration}
            begin={p.begin}
            repeatCount="indefinite"
            path={p.motionPath}
          />
        </circle>
      </g>
    ))
  }
</svg>
