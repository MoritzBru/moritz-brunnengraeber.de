---
import IconUser from '~icons/ph/user-duotone';
import IconMail from '~icons/ph/envelope-duotone';
import IconMessage from '~icons/ph/chat-dots-duotone';
import IconSuccess from '~icons/line-md/confirm-circle-twotone';
import IconAlert from '~icons/line-md/alert-twotone';
import IconLoading from '~icons/svg-spinners/ring-resize';
---

<form
  class="w-full"
  x-data="contactForm()"
  x-bind:class="isValidated && 'validated'"
  @submit.prevent="submit"
  @reset="reset"
  action="https://api.web3forms.com/submit"
  novalidate
>
  <input
    type="hidden"
    name="access_key"
    value="56c27341-a6f4-4f96-a28b-69093b842c8d"
  />
  <input
    type="checkbox"
    name="botcheck"
    class="hidden"
  />
  <input
    type="hidden"
    name="subject"
    value="New message"
  />
  <input
    type="hidden"
    name="from_name"
    value="Contact Form"
  />

  <div class="grid grid-cols-2 gap-x-4 gap-y-8">
    <div class="floating-label col-span-2 md:col-span-1">
      <input
        id="form-name"
        name="name"
        type="text"
        class="dui-input dui-input-bordered w-full focus:outline-primary"
        placeholder=""
        autocomplete="name"
        required
      />
      <div class="invalid-feedback">I want to know who wrote me.</div>
      <label
        for="form-name"
        class="flex items-center gap-1"
      >
        <IconUser aria-hidden="true" />
         Your Name
      </label>
    </div>

    <div class="floating-label col-span-2 md:col-span-1">
      <input
        id="form-email"
        name="email"
        type="email"
        class="dui-input dui-input-bordered w-full focus:outline-primary"
        placeholder=""
        autocomplete="email"
        required
      />
      <div class="invalid-feedback">I need a valid email so that I can perhaps reply.</div>
      <label
        for="form-email"
        class="flex items-center gap-1"
      >
        <IconMail aria-hidden="true" />
         Your E-Mail
      </label>
    </div>

    <div class="floating-label col-span-2">
      <textarea
        id="form-message"
        name="message"
        class="dui-textarea dui-textarea-bordered w-full text-base focus:outline-primary"
        rows="3"
        placeholder=""
        required
      ></textarea>
      <div class="invalid-feedback">I thought you were here to write me a message?!</div>
      <label
        for="form-message"
        class="flex items-center gap-1"
      >
        <IconMessage aria-hidden="true" />
         Your Message
      </label>
    </div>

    <div class="dui-form-control col-span-2 grid grid-cols-[auto_1fr] items-center gap-x-3">
      <input
        id="form-gdpr"
        name="gdpr"
        type="checkbox"
        class="dui-checkbox-primary dui-checkbox"
        required
      />
      <label
        class="dui-label cursor-pointer text-pretty py-0 text-sm leading-snug"
        for="form-gdpr"
      >
        Agreement that the data will be stored and processed only for the purpose of communication.
        The data will not be passed on to third parties!
      </label>
      <div class="invalid-feedback col-span-2">
        Please check this. I promise, this data is only used for sending me an email with your
        issue.
      </div>
    </div>

    <button
      type="reset"
      class="dui-btn dui-btn-secondary"
    >
      Reset
    </button>
    <button
      type="submit"
      class="dui-btn dui-btn-primary"
      x-bind:disabled="isBusy"
    >
      <IconLoading
        class="size-6"
        x-cloak
        x-show="isBusy"
        x-tansition
      />
       Send
    </button>
  </div>

  <div
    role="alert"
    class="dui-alert dui-alert-success mt-4 bg-green-100"
    x-cloak
    x-show="isSubmitSuccess"
    x-transition:enter="transition origin-top"
    x-transition:enter-start="opacity-0 -translate-y-4"
    x-transition:enter-end="opacity-100 translate-y-0"
    x-transition:leave="transition origin-top"
    x-transition:leave-start="opacity-100 translate-y-0"
    x-transition:leave-end="opacity-0 -translate-y-4"
  >
    <IconSuccess class="size-8 text-success" />
    <p>The form was submitted successfully. Thank you!</p>
  </div>

  <div
    role="alert"
    class="dui-alert dui-alert-error mt-4 bg-red-100"
    x-cloak
    x-show="isSubmitError"
    x-transition:enter="transition origin-top"
    x-transition:enter-start="opacity-0 -translate-y-4"
    x-transition:enter-end="opacity-100 translate-y-0"
    x-transition:leave="transition origin-top"
    x-transition:leave-start="opacity-100 translate-y-0"
    x-transition:leave-end="opacity-0 -translate-y-4"
  >
    <IconAlert class="size-8 text-error" />
    <div>
      <p>There was a problem while submitting the form.</p>
      <p>Please try again later or reach me via the other platforms in the footer.</p>
    </div>
  </div>
</form>

<script>
  document.addEventListener('alpine:init', () => {
    Alpine.data('contactForm', () => ({
      isBusy: false,
      isValidated: false,
      isSubmitSuccess: false,
      isSubmitError: false,

      async submit(event: SubmitEvent) {
        const form = event.target as HTMLFormElement;
        const url = form.action;

        this.isSubmitSuccess = false;
        this.isSubmitError = false;

        if (!form.checkValidity()) {
          this.isValidated = true;
          form.querySelector<HTMLInputElement | HTMLTextAreaElement>(':invalid')?.focus();
          return;
        }

        this.isBusy = true;

        const formData = new FormData(form);
        const object = Object.fromEntries(formData.entries());
        const jsonString = JSON.stringify(object);

        const response = await fetch(url, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json',
          },
          body: jsonString,
        });
        const result = await response.json();

        if (result.success) {
          this.isSubmitSuccess = true;
          form
            .querySelectorAll<HTMLInputElement | HTMLTextAreaElement>('[name]')
            .forEach((el) => (el.value = ''));
        } else {
          this.isSubmitError = true;
        }

        this.isBusy = false;
      },

      reset() {
        this.isBusy = false;
        this.isValidated = false;
        this.isSubmitSuccess = false;
        this.isSubmitError = false;
      },
    }));
  });
</script>

<style>
  .floating-label {
    @apply relative mt-2;
  }
  .floating-label label {
    @apply absolute left-4 top-3 origin-top-left transition;
  }
  .floating-label :is(input, textarea):is(:focus, :not(:placeholder-shown)) ~ label {
    @apply -translate-y-10 scale-90 text-inherit;
  }

  .validated :is(.dui-input, .dui-textarea, .dui-checkbox):invalid {
    @apply border-error transition-colors focus:outline-error;
  }
  .invalid-feedback {
    @apply mx-2 mt-1 hidden text-sm text-error;
    animation: hide 150ms ease-in-out;
  }
  .validated :invalid ~ .invalid-feedback {
    @apply block;
    animation: reveal 150ms ease-in-out;
  }

  @keyframes reveal {
    from {
      display: none;
      opacity: 0;
      transform: translateY(-10%);
      transform-origin: top;
    }
    to {
      display: block;
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes hide {
    from {
      display: block;
      opacity: 1;
      transform: translateY(0);
      transform-origin: top;
    }
    to {
      display: none;
      opacity: 0;
      transform: translateY(-10%);
    }
  }
</style>
